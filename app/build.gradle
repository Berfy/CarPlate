apply plugin: 'com.android.application'

def config = rootProject.ext
android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner config.testInstrumentationRunner
        testApplicationId config.testApplicationId
    }

    //----------------------不打包进版本的文件---------------------
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    //----------------------lint检查----------------------
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //区分名字
                    def fileName = "PNDecoder_v${defaultConfig.versionName}_debug.apk"
                    output.outputFile = new File(output.outputFile.parent, fileName)
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //区分名字
                    def fileName = "PNDecoder_v${defaultConfig.versionName}_release.apk"
                    output.outputFile = new File(output.outputFile.parent, fileName)
                }
            }
        }
    }

    //----------------------签名配置----------------------
    signingConfigs {
        debug {
            //为了方便测试分享或第三方登录  使用正式签名
            storeFile file('../buildsystem/wlb_agent_key.jks')
            storePassword 'wolaibao'
            keyAlias 'wlb_agent_key'
            keyPassword 'wolaibao'
        }
        release {
            storeFile file('../buildsystem/wlb_agent_key.jks')
            storePassword 'wolaibao'
            keyAlias 'wlb_agent_key'
            keyPassword 'wolaibao'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:recyclerview-v7:26.+'
    compile "com.android.support:support-v13:26.+"
    testCompile 'junit:junit:4.12'
    compile project(':framework')
    compile project(':pr')
}
